#!/bin/bash

# IP or URL of the server you want to deploy to
APP_HOST=pushpickup.com

# If you want a different ROOT_URL, when using a load balancer for instance, set it here
#ROOT_URL=mycustom.url.com

# Comment this if your host is not an EC2 instance
#EC2_PEM_FILE=~/.ssh/dwinst-aws.pem

# What's your project's Git repo?
GIT_URL=git@github.com:dwinston/pushpickup.git

# Does your project use meteorite, or plain meteor?
METEORITE=true

# If not using Meteorite, you need to specify this
METEOR_RELEASE=0.6.4.1

#If you have an external service, such as Google SMTP, set this
#MAIL_URL=smtp://USERNAME:PASSWORD@smtp.googlemail.com:465

# What's your app name?
APP_NAME=pushpickup

# If your app is not on the repository root, set this
APP_PATH=.

# If you would like to use a different branch, set it here
GIT_BRANCH=master

# Kill the forever and node processes, and deletes the bundle directory and tar file prior to deploying
FORCE_CLEAN=false

# Setup a listening port for your instance / default is 80
#PORT=8000

# If you want to do something before forever starts Meteor, you can do it here
# NOTE: Don't forget to use a semi-colon at the end of every command
#PRE_METEOR_START="export ENVIRONMENT=prod;"




APP_DIR=.

ROOT_URL=http://$APP_HOST
MONGO_URL=mongodb://localhost:27017/$APP_NAME

PORT=80

METEOR_CMD=mrt
METEOR_OPTIONS=''

cd $APP_DIR
cd $APP_NAME
echo Updating codebase
git fetch origin
git checkout $GIT_BRANCH
git pull
cd $APP_PATH
echo Creating new bundle. This may take a few minutes
$METEOR_CMD bundle ../bundle.tgz $METEOR_OPTIONS
cd ..
tar -zxvf bundle.tgz
export MONGO_URL=$MONGO_URL
export ROOT_URL=$ROOT_URL
if [ -n "$MAIL_URL" ]; then
    export MAIL_URL=$MAIL_URL
fi
export PORT=$PORT
echo Starting forever
sudo -E forever start bundle/main.js
